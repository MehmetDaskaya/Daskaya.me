[{"/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/index.js":"1","/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/App.js":"2","/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/reportWebVitals.js":"3","/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/Browser/Browser.js":"4","/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/LoadingScreen/Loading.js":"5","/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/Icon/Icon.js":"6","/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/Toolbar/Toolbar.js":"7"},{"size":535,"mtime":1695700284159,"results":"8","hashOfConfig":"9"},{"size":4186,"mtime":1695702681615,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1695699595657,"results":"11","hashOfConfig":"9"},{"size":2687,"mtime":1695700229419,"results":"12","hashOfConfig":"9"},{"size":722,"mtime":1695701828679,"results":"13","hashOfConfig":"9"},{"size":570,"mtime":1695700268412,"results":"14","hashOfConfig":"9"},{"size":1500,"mtime":1695702436003,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qvl1ey",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/index.js",[],[],"/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/App.js",[],[],"/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/reportWebVitals.js",[],[],"/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/Browser/Browser.js",["38","39","40","41"],[],"import React, { useState } from \"react\";\nimport \"./Browser.css\";\n\nconst Browser = ({ url, isOpen, setIsBrowserOpen }) => {\n  const [minimizeOpacity, setMinimizeOpacity] = useState(0.85);\n  const [resizeOpacity, setResizeOpacity] = useState(0.85);\n  const [closeOpacity, setCloseOpacity] = useState(0.85);\n\n  // Function to toggle fullscreen mode\n  const toggleFullscreen = () => {\n    const iframe = document.querySelector(\"iframe\");\n    const browserContainer = document.querySelector(\".browser-container\");\n\n    if (iframe.classList.contains(\"fullscreen\")) {\n      iframe.classList.remove(\"fullscreen\");\n      browserContainer.classList.remove(\"fullscreen\");\n    } else {\n      iframe.classList.add(\"fullscreen\");\n      browserContainer.classList.add(\"fullscreen\");\n    }\n  };\n\n  const handleMinimizeClick = () => {\n    setMinimizeOpacity(0.7);\n    setTimeout(() => {\n      setMinimizeOpacity(0.85);\n    }, 300);\n  };\n\n  const handleResizeClick = () => {\n    setResizeOpacity(0.7);\n    setTimeout(() => {\n      setResizeOpacity(0.85);\n    }, 300);\n    toggleFullscreen();\n  };\n\n  const handleCloseClick = () => {\n    setCloseOpacity(0.7);\n    setTimeout(() => {\n      setCloseOpacity(0.85);\n    }, 300);\n\n    // Close the browser by setting isBrowserOpen to false\n    setIsBrowserOpen(false);\n  };\n\n  return (\n    <div className={`browser-container ${isOpen ? \"open\" : \"\"}`}>\n      <div className=\"browser-title-bar\">\n        <div className=\"browser-left\">\n          <img\n            className=\"explorer-icon\"\n            src=\"https://raw.githubusercontent.com/MehmetDaskaya/Daskaya.me/main/public/NicePng_windows-xp-taskbar-png_9285144.png\"\n          />\n          <p className=\"explorer-title\">Windows Internet Explorer</p>\n        </div>\n        <div className=\"browser-right\">\n          <img\n            src=\"/minimized.png\"\n            className=\"header browser-icon\"\n            onClick={handleMinimizeClick}\n            style={{ opacity: minimizeOpacity }}\n          />\n          <img\n            src=\"/resized.png\"\n            className=\"header browser-icon\"\n            onClick={handleResizeClick}\n            style={{ opacity: resizeOpacity }}\n          />\n          <img\n            src=\"/closed.png\"\n            className=\"header browser-icon\"\n            onClick={handleCloseClick}\n            style={{ opacity: closeOpacity }}\n          />\n        </div>\n      </div>\n      {isOpen && (\n        <div className=\"browser-content\">\n          <iframe\n            src={url}\n            title=\"Embedded Browser\"\n            width=\"800\"\n            height=\"600\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Browser;\n","/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/LoadingScreen/Loading.js",[],[],"/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/Icon/Icon.js",[],[],"/Users/mehmetdaskaya/Documents/projects/Portfolio/Daskaya.me/src/components/Toolbar/Toolbar.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":52,"column":11,"nodeType":"44","endLine":55,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":59,"column":11,"nodeType":"44","endLine":64,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":65,"column":11,"nodeType":"44","endLine":70,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":71,"column":11,"nodeType":"44","endLine":76,"endColumn":13},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]